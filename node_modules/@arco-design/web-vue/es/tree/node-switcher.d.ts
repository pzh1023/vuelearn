import { PropType, VNode } from 'vue';
import { TreeNodeData } from './interface';
declare const _default: import("vue").DefineComponent<{
    prefixCls: StringConstructor;
    expanded: BooleanConstructor;
    loading: BooleanConstructor;
    showLine: BooleanConstructor;
    isLeaf: BooleanConstructor;
    treeNodeData: {
        type: PropType<TreeNodeData>;
    };
    icons: {
        type: PropType<Record<string, () => VNode[]>>;
    };
}, {
    switcherIcon: import("vue").ComputedRef<import("vue").Slot | undefined>;
    loadingIcon: import("vue").ComputedRef<import("vue").Slot | undefined>;
    onClick(e: Event): void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "click"[], "click", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<{
    prefixCls?: unknown;
    expanded?: unknown;
    loading?: unknown;
    showLine?: unknown;
    isLeaf?: unknown;
    treeNodeData?: unknown;
    icons?: unknown;
} & {
    expanded: boolean;
    loading: boolean;
    isLeaf: boolean;
    showLine: boolean;
} & {
    prefixCls?: string | undefined;
    icons?: Record<string, () => VNode[]> | undefined;
    treeNodeData?: TreeNodeData | undefined;
}> & {
    onClick?: ((...args: any[]) => any) | undefined;
}, {
    expanded: boolean;
    loading: boolean;
    isLeaf: boolean;
    showLine: boolean;
}>;
export default _default;
