var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
import { defineComponent, toRefs, computed, openBlock, createElementBlock, mergeProps, createElementVNode, renderSlot } from "vue";
import _export_sfc from "../../_virtual/plugin-vue_export-helper.js";
const _sfc_main = defineComponent({
  name: "VirtualListFiller",
  props: {
    height: {
      type: Number
    },
    offset: {
      type: Number
    },
    disabled: {
      type: Boolean
    },
    type: String,
    outerAttrs: Object,
    innerAttrs: Object
  },
  setup(props) {
    const { height, offset } = toRefs(props);
    const outerStyle = computed(() => offset.value !== void 0 ? {
      height: `${height.value}px`,
      position: "relative",
      zIndex: 0
    } : {});
    const innerStyle = computed(() => {
      const commonStyle = {
        display: "flex",
        flexDirection: "column"
      };
      return offset.value !== void 0 ? __spreadProps(__spreadValues({}, commonStyle), {
        transform: `translateY(${offset.value}px)`,
        position: "absolute",
        left: 0,
        right: 0,
        top: 0
      }) : commonStyle;
    });
    return {
      outerStyle,
      innerStyle
    };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return _ctx.type === "table" ? (openBlock(), createElementBlock("table", mergeProps({
    key: 0,
    style: _ctx.outerStyle,
    cellpadding: "0",
    cellspacing: "0"
  }, _ctx.outerAttrs), [
    createElementVNode("tbody", mergeProps({ style: _ctx.innerStyle }, _ctx.innerAttrs), [
      renderSlot(_ctx.$slots, "default")
    ], 16)
  ], 16)) : !_ctx.disabled ? (openBlock(), createElementBlock("div", mergeProps({
    key: 1,
    style: _ctx.outerStyle
  }, _ctx.outerAttrs), [
    createElementVNode("div", mergeProps({ style: _ctx.innerStyle }, _ctx.innerAttrs), [
      renderSlot(_ctx.$slots, "default")
    ], 16)
  ], 16)) : renderSlot(_ctx.$slots, "default", { key: 2 });
}
var Filler = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { Filler as default };
