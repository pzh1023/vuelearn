"use strict";
var vue = require("vue");
var globalConfig = require("../_utils/global-config.js");
var context = require("./context.js");
var vueUtils = require("../_utils/vue-utils.js");
var _Breadcrumb = vue.defineComponent({
  name: "Breadcrumb",
  props: {
    maxCount: {
      type: Number,
      default: 0
    }
  },
  setup(props, {
    slots
  }) {
    const {
      maxCount
    } = vue.toRefs(props);
    const prefixCls = globalConfig.getPrefixCls("breadcrumb");
    const total = vue.ref(0);
    const needHide = vue.computed(() => maxCount.value > 0 && total.value > maxCount.value + 1);
    vue.provide(context.breadcrumbInjectKey, vue.reactive({
      total,
      maxCount,
      needHide,
      slots
    }));
    return () => {
      var _a, _b;
      const children = vueUtils.getAllElements((_b = (_a = slots.default) == null ? void 0 : _a.call(slots)) != null ? _b : []);
      if (total.value !== children.length) {
        total.value = children.length;
      }
      return vue.createVNode("div", {
        "role": "list",
        "class": prefixCls
      }, [children.map((child, index) => {
        var _a2;
        child.props = vue.mergeProps((_a2 = child.props) != null ? _a2 : {}, {
          index
        });
        return child;
      })]);
    };
  }
});
module.exports = _Breadcrumb;
