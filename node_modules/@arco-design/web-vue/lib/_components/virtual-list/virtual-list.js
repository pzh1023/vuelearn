"use strict";
var virtualList_vue_vue_type_script_lang = require("./virtual-list.vue_vue&type=script&lang.js");
var vue = require("vue");
var pluginVue_exportHelper = require("../../_virtual/plugin-vue_export-helper.js");
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_RenderFunction = vue.resolveComponent("RenderFunction");
  const _component_Filler = vue.resolveComponent("Filler");
  const _component_ResizeObserver = vue.resolveComponent("ResizeObserver");
  return vue.openBlock(), vue.createBlock(_component_ResizeObserver, { onResize: _ctx.handleResize }, {
    default: vue.withCtx(() => [
      (vue.openBlock(), vue.createBlock(vue.resolveDynamicComponent(_ctx.component), vue.mergeProps(_ctx.$attrs, {
        ref: "viewportRef",
        style: {
          overflowY: "auto",
          overflowAnchor: "none",
          maxHeight: `${_ctx.viewportHeight}px`
        },
        onScroll: _ctx.handleScroll
      }), {
        default: vue.withCtx(() => [
          vue.createVNode(_component_Filler, {
            height: _ctx.isVirtual ? _ctx.totalHeight : _ctx.viewportHeight,
            offset: _ctx.isVirtual ? _ctx.startOffset : void 0,
            type: _ctx.type,
            "outer-attrs": _ctx.outerAttrs,
            "inner-attrs": _ctx.innerAttrs
          }, {
            default: vue.withCtx(() => [
              vue.createVNode(_component_RenderFunction, { "render-func": _ctx.renderChildren }, null, 8, ["render-func"])
            ]),
            _: 1
          }, 8, ["height", "offset", "type", "outer-attrs", "inner-attrs"])
        ]),
        _: 1
      }, 16, ["style", "onScroll"]))
    ]),
    _: 1
  }, 8, ["onResize"]);
}
var VirtualList = /* @__PURE__ */ pluginVue_exportHelper(virtualList_vue_vue_type_script_lang, [["render", _sfc_render]]);
module.exports = VirtualList;
