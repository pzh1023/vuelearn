"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports[Symbol.toStringTag] = "Module";
var vue = require("vue");
const DEFAULT_ITEM_HEIGHT = 32;
function useItemHeight(props) {
  const { estimatedItemHeight: propEstimatedItemHeight, data } = vue.toRefs(props);
  const itemHeightCacheMap = vue.ref(new Map());
  const estimatedItemHeight = vue.ref(propEstimatedItemHeight == null ? void 0 : propEstimatedItemHeight.value);
  const itemLength = vue.computed(() => itemHeightCacheMap.value.size);
  vue.watch(itemLength, () => {
    if (itemLength.value && !estimatedItemHeight.value) {
      estimatedItemHeight.value = [...itemHeightCacheMap.value.entries()].reduce((sum, [, height]) => sum + height, 0) / itemLength.value;
    }
  });
  const itemHeight = vue.computed(() => estimatedItemHeight.value || DEFAULT_ITEM_HEIGHT);
  const minItemHeight = vue.computed(() => Math.min(itemHeight.value, DEFAULT_ITEM_HEIGHT));
  const totalHeight = vue.computed(() => itemHeight.value * data.value.length);
  function setItemHeight(key, height) {
    itemHeightCacheMap.value.set(key, height);
  }
  function getItemHeight(key) {
    return itemHeightCacheMap.value.get(key);
  }
  function getItemHeightOrDefault(key) {
    return itemHeightCacheMap.value.get(key) || itemHeight.value;
  }
  function getItemHeightByIndex(index) {
    const { key } = data.value[index];
    return itemHeightCacheMap.value.get(key);
  }
  function getItemHeightOrDefaultByIndex(index) {
    return getItemHeightByIndex(index) || itemHeight.value;
  }
  return {
    itemHeight,
    minItemHeight,
    estimatedItemHeight,
    totalHeight,
    setItemHeight,
    getItemHeight,
    getItemHeightOrDefault,
    getItemHeightByIndex,
    getItemHeightOrDefaultByIndex
  };
}
exports.useItemHeight = useItemHeight;
