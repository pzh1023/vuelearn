"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports[Symbol.toStringTag] = "Module";
var vue = require("vue");
var index = require("../utils/index.js");
var throttleByRaf = require("../../../_utils/throttle-by-raf.js");
function useRangeState(props) {
  const { viewportRef, visibleCount, itemCount } = vue.toRefs(props);
  const rangeState = vue.reactive({
    itemIndex: 0,
    itemOffsetPtg: 0,
    startIndex: 0,
    endIndex: visibleCount.value
  });
  const updateRangeState = () => {
    if (!viewportRef.value)
      return;
    const {
      scrollTop: rawScrollTop,
      clientHeight,
      scrollHeight
    } = viewportRef.value;
    const scrollPtg = index.getScrollPercentage({
      scrollTop: rawScrollTop,
      clientHeight,
      scrollHeight
    });
    const { itemIndex, itemOffsetPtg, startIndex, endIndex } = index.getRangeIndex(scrollPtg, itemCount.value, visibleCount.value);
    rangeState.itemIndex = Math.min(itemCount.value - 1, itemIndex);
    rangeState.itemOffsetPtg = itemOffsetPtg;
    rangeState.startIndex = startIndex;
    rangeState.endIndex = endIndex;
  };
  return {
    rangeState,
    updateRangeState: throttleByRaf.throttleByRaf(updateRangeState)
  };
}
exports.useRangeState = useRangeState;
